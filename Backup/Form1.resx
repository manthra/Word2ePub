<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="ofdOpen.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>127, 17</value>
  </metadata>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>221, 17</value>
  </metadata>
  <metadata name="sfdSave.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>330, 17</value>
  </metadata>
  <metadata name="fbdSplit.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>420, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAAAAACoDgAAFgAAACgAAAAwAAAAYAAAAAEACAAAAAAAAAkAAAAAAAAAAAAAAAEAAAAB
        AAAAAAAAmWZmAJZmZgCXaGgAn29vAJRnZwCPaWkAkWtrAI1oaADMmZkAuYyMAL+SkgCTcHAAw5aWALGI
        iACmgIAAs4yMAJBxcQCXd3cAkXR0AJZ5eQChg4MAmX19AGxZWQCmiooAmX9/AJyCggCVfHwAZlZWAH9s
        bACIdXUAkn9/AJ+MjADSu7sAp5WVAK+iogC0qKgAtqqqAP/y8gC5s7MA//n5AJt0cwCsgoEAzLKxAKZ3
        dACmeHYAond1ALOLiQCmdXEAxpuXAObY1wDfzMoA7OLhAP+mmQD/vLMA/8e/AP/p5gDy6+oA/6yfAP/T
        zACzgngAuY2EAL+XjwDGopoA2cG7AOzg3QC5iXsA0rSsAObTzAD/tpkA/7eaAP+7nwD/ybMA0q6fAP+8
        nQDSn4kAzJ+LAP/XxgD/4dIA+PTyAP/AnwD/xKIA7NfMAP/v5gDs1ccA5r2hAObErgD/yaAA/8ulAPLY
        xQD/+/gA/8aZAP/InQD/zaYA/8+nAP/RqgD51rYA/9euAP/XsAD/2LIA/9q1AP/duwD/4MEA/+jSAP/r
        1wD/7t0A//HjAP/58wD/48YA/+bMAP/06AD/9+4AZtX/APHgBwBIb1UAUnheAGV4awBZzIAAa3VvAP//
        /wD9/f0A+vr6APf39wD19fUA8vLyAPHx8QDv7+8AIVz6AOrq6gDp6ekA5+fnAOXl5QDj4+MA4ODgAN7e
        3gDd3d0A2traANnZ2QDX19cA1NTUANLS0gDR0dEAz8/PAMzMzADKysoAycnJAMbGxgDFxcUAwsLCAMDA
        wAC/v78Avb29ALu7uwC5ubkAt7e3ALS0tACysrIAsLCwAK6urgCsrKwAq6urAKmpqQCnp6cApaWlAKKi
        ogCgoKAAnp6eAJycnACbm5sAmZmZAJeXlwCUlJQAk5OTAJGRkQCPj48AjY2NAIqKigCJiYkAhoaGAIWF
        hQCDg4MAgICAAH9/fwB8fHwAenp6AHl5eQB3d3cAdXV1AHNzcwBwcHAAb29vAGxsbABqamoAaWlpAGZm
        ZgBkZGQAY2NjAGFhYQBeXl4AXFxcAFtbWwBZWVkAV1dXAFRUVABTU1MAUVFRAE5OTgBMTEwASkpKAEhI
        SABGRkYARUVFAENDQwBBQUEAPj4+AD09PQA7OzsAOTk5ADc3NwA0NDQAMzMzAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAcHAAAHBwcAMHF1MAAAAAcABzcHBwcHBwcHBwcBdDJ3BwcEMAB3BwcHBwcHBwcHBwcHAAAHBw
        cAAAAEMXcHBwQ0dwcHBwcHBwcHBwcHBwcFRTR3NwcHBwcHBwcHBwAAMHcHAAI3BwcAATAHBwcHBwV0dw
        cHBwcHBwcHBwcHBwcAAAAHBwcHBwcHBwcHBwcHMXcHBUcHBwcAAAAABwN3BwAHAjcHBwcHBwcHBwAAAA
        AHBwUwAAAABXcHBwcHBwcHBwcHBwcHBwcAAAcHBwM3BwAHADcHBwcHBwcHBwABdwcHBwcBcAFwAAcHBw
        cHBwAAczcHBwcHBwcAAAcHBwVwNwAHBwcHBwcHBwcHBzc3BwcHBwcHAAcEcAcHBwcHBwFycTcHBwcHBw
        cAAAFyMAM3BwF3BwcHBwcHBwcHAAcHBwcHBwAHBwcFQAcHBwcHBwcHBwcHBwcHBwcAAAAAAAcHBwE3Bw
        cHBwcHBwcHBwN3AjI3BwE3BwBwAAcHBwcHBwcHBwcHBwcHBwcDdwcHBwcHAAcHBwcHBwcHBwcHBwEwcz
        AHBwU3BUR3BwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcBcncHBwcHBwcHBwcHBwAxdzU3BwAHAAAEcDcHBw
        cHBwcHBwcHBwcHBwcHBwcHATcCNwcHBwcHBwcHBwcHBwJ3BwcHBwABdUIwdwcHBwcHBwcHBwcHBwcHBw
        cHBwcHAAcHBwcHBwcAMTE0MXcHBwcAdwI3BwIwBTAHBwcHBwcHBwcHBwcHBwcHBwcHBwcHAAcHBwcHNw
        cCMAAAAAcHBwcBNwA3BwcAAzAHBwcHBwcHBwcHBwcHBwcHBwcHBwcHATAABwcHBzcAAjcHBUAHBwcAAD
        cHBwJ0cHcHBwAwcHQxdzcHBwcHBwcHBwcHBwcHBwRwdwcHMHAHBwcAAAcHAAcHBUAHBwAAAAI3BwcHBw
        cAAAcCNUcHBwcHBwcHBwcHBwcHBwcHBwAAdwAwAAcHBTcHBUAHBwAAAAAAdwcHA3cHBDcDcAcHBwcHBw
        cHBwcHBwcHBwcHBzAAAXAABzcDMAcAAAAHBwAAAARwAXcFcAcHBwAAAAcHBwcHBwcHBwcHBwc3AXcAAT
        EwBHIwcDAAAARwAAAHBwAAAAAAAAAFdzRzNwVAAAcHBwcHBwcHBwcHBwcHBTcAAjN0cAAFRUAAAARwAA
        AHBwAABUUwAAVBdwAwdHVEMAcHBwcHBwcXFxcHBwcHBxcXEzA1dxcXFxcSNUcXFxcHBxcXEAAENTAHFx
        cQAAA3AAcHBwcHBwcXFxcHBwcEdxcXEAcHFxcXFxcXE3cXEDB3BxcXEAAAAAAHFxcQMzAAAAcHBwcHBw
        cXFxcHBwcHFxcXBwcXFxcXFxcXFxcXFwcHBxcXEXRwAAVHFxcScAAAAAcHBwcHBwcXFxcHBwN3FxcXBw
        cXFxcHBwcHFxcXFwcHBxcXFwcHBwcHFxcUcAJ3BwcHBwcHBwcXFxcHBwcXFxcHBwcXFxcHBwcHBxcXFw
        cHBxcXFwcHBwcHFxcTMDcHAzcHBwcHBwcXFxcHBwcXFxcHBwcXFxcHBwcHBxcXFwcHBxcXFwcHBwcHFx
        cXNwcHAAcHBwcHBwcXFxcXBxcXEAcHBwcHFxcXFwcHBxcXFwcHBxcXFwcHBwcHFxcXBwBwBwcHBwcHBw
        cXFxcXFxcXFDcHNwcHBxcXFxcXFxcXFwcHBxcXFwcHBwcHFxcXBwcANwcHBwcHBwcXFxcXFxcXEHcHBw
        cHBwcHBxcXFxcXFwcHBxcXFwcHBwE3FxcXBwcHBwcHBwcHBwcXFxcXFxcQAAcHBwcHBwcHBwcHBxcXFw
        cHBxcXFwcHBwcHFxcXBwcHBwcHBwcHBwcXFxcHFxcXEncHBwcHFxcHBwcHBxcXFwcHBxcXFwcBMXcHFx
        cXBwcHBwcHBwcHBwcXFxcHBxcXFxcHBwcXFxcXBwc3FxcXFwcHBxcXFxcHBwcXFxcXBwcHBwcHBwcHBw
        cXFxcHAAcXFxcHBwcHFxcXFxcXFxcXFwcHBxcXFxcXFxcXFxcQdwcHBzcHBwcHBwcXFxcHAAcHFxcXBw
        cHFxcXFxcXFxcXBwcHBxcXFwcXFxcXFxcHNwcHBwcHBwcHBwcXFxcHAAcHFxcXFwcHBwcXFxcXFxcHBw
        cHBxcXFwcHFxcXEAcHBwcHBwcHBwcHBwcXFxcHAAJwcnVAdwVAADcHBwcHBwcHBwcHBwcHATcHBwVHAA
        cHBwcHAAcHBwcHBwcXFxcHAjAENHAAAzB1MAAABwcHBwcHBwcHBwAHBXcHBwcHBzcHBwcHAAcHBwcHBw
        cXFxcHATAFRUVAAAABcXRwAAcHBwcHBwcHAAcHBwcHBwF3NUcHBwcBcAcHBwcHBwcXFxcHATQwMTAEcA
        MwAAVEdXAABTUyMDcHBwcHA3BwBwc3BwcHBwAAAAcHBwcHBwcXFxcHAHACMjAFMAVycnFwBXIwAXAFMA
        EwdwcHBwcHBwAAdwcHBTAABDcHAnA0c3cXFxcHBwAAAAMzMnRwAjQxcTABcAIyczQxMHQ3NTABcnEwcH
        AABTAAAAcHBwcAAAAAAAAAAAcHAAVBMAcwBUAFRUAABUVDMAAAAjAFNUAABDVCcjAABDRwBwcHBwcHMH
        AAAHRwBTc3BwAAAXcwcAAAAAExcnIyMXFycXIyMzAEdHVCMjUzcAAABwcHBwcHBwI3BDcHAAABNwAAAA
        cHBwcHBwcHAHAAAAAAdwAAAAAEcjABcnM1dHQ3NwcHBwcHBwcHBwcDcAAABwcAAAV3NwcHBwcFQAFxMA
        AAAHBwMDFyMjRyMnc3BwcHBwcHBwcHBwcHAAIwBTBwBwcCMAAAAAcHBwcDNwcwBDNwcAVEcDA0NXVwAA
        cHBwcHBwcHBwcHBwcAAAc3BwIwBwcHBzAFRTAHBwcHNwcHBwcHAXAEMABycAAAAAVAAAAAAAcHBwcHBw
        cAAAcHBwJwBwcHBwUwBTVAAXcHBwcHBwcHBwcHAAIwAAN3BHV1NTU1NTcHBwcHBwcHBwBwAAcHAAAAAA
        cHBwcHBwcHBwcHADBwAncAMDcHBwAyMjcHBwcHBwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>